{
  "openapi": "3.0.3",
  "info": {
    "title": "Nextu App",
    "description": "Cette API permet de gérer notre réseau social scolaire.",
    "contact": {
      "email": "ilias.hanfaoui@next-u.fr"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000/api/v1/nextu"
    }
  ],
  "tags": [
    {
      "name": "posts",
      "description": "Gestion des posts"
    },
    {
      "name": "users",
      "description": "Gestion des utilisateurs"
    }
  ],
  "paths": {
    "/posts": {
      "get": {
        "tags": [
          "posts"
        ],
        "summary": "Retourne la liste des posts",
        "operationId": "getAllPosts",
        "responses": {
          "200": {
            "description": "Opération réussie",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Post"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Requête invalide"
          }
        }
      },
      "post": {
        "tags": [
          "posts"
        ],
        "summary": "Crée un nouveau post",
        "operationId": "createPost",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Post"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Post créé"
          },
          "400": {
            "description": "Requête invalide"
          }
        }
      }
    },
    "/posts/{postId}": {
      "get": {
        "tags": [
          "posts"
        ],
        "summary": "Retourne un post par ID",
        "operationId": "getPostById",
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Opération réussie",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Post"
                }
              }
            }
          },
          "404": {
            "description": "Post non trouvé"
          }
        }
      },
      "put": {
        "tags": [
          "posts"
        ],
        "summary": "Met à jour un post",
        "operationId": "updatePost",
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Opération réussie"
          },
          "400": {
            "description": "Requête invalide"
          }
        }
      },
      "delete": {
        "tags": [
          "posts"
        ],
        "summary": "Supprime un post",
        "operationId": "deletePost",
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Post supprimé"
          },
          "404": {
            "description": "Post non trouvé"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Retourne la liste des utilisateurs",
        "operationId": "getAllUsers",
        "responses": {
          "200": {
            "description": "Opération réussie",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Requête invalide"
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Crée un nouvel utilisateur",
        "operationId": "createUser",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Utilisateur créé"
          },
          "400": {
            "description": "Requête invalide"
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Retourne un utilisateur par ID",
        "operationId": "getUserById",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Opération réussie",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "Utilisateur non trouvé"
          }
        }
      },
      "put": {
        "tags": [
          "users"
        ],
        "summary": "Met à jour un utilisateur",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Opération réussie"
          },
          "400": {
            "description": "Requête invalide"
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Supprime un utilisateur",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Utilisateur supprimé"
          },
          "404": {
            "description": "Utilisateur non trouvé"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Post": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "status": {
            "type": "boolean"
          },
          "creation_date": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "media": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "sondage": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "username": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "api_key": {
        "type": "apiKey",
        "name": "api_key",
        "in": "header"
      }
    }
  }
}